/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | foam-extend: Open Source CFD                    |
|  \\    /   O peration     | Version:     4.0                                |
|   \\  /    A nd           | Web:         http://www.foam-extend.org         |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

libs (
      "libfoam.so"
      "liblduSolvers.so"
      "libplasmaCookBook.so"
     );

application         plasmaSimFoam;//somaFoam;

startFrom           latestTime;//startTime;

startTime           0;

stopAt              endTime;

endTime             1200E-6;//400E-6;//100E-6;//5E-4;//

courantNumber	    on;

deltaT              5E-11;

writeControl        runTime;

writeInterval       1E-7;

MaxCo               0.5;

deltaTMax           1E-10;

deltaTMin           1E-40;//1E-15;

purgeWrite          0;

writeFormat         ascii;

writePrecision      15;

writeCompression    uncompressed;

timeFormat          general;

timePrecision       15;

runTimeModifiable   yes;

restartCapable      on;

OptimisationSwitches
{
    commsType       nonBlocking;
}

DebugSwitches
{
    dimensionSet    0;
}

Tolerances
{

}

functions
{
    dumpObjects_1
    {
        type            writeRegisteredObject;
        functionObjectLibs ("libIOFunctionObjects.so");
        outputControl   outputTime;
        objectNames    ("E");
    }

    boundTemperature
    {
        type            boundField;
        functionObjectLibs ("libsampling.so");
        name   Te;
        minValue    250;//300;
        maxValue    600000;
    }

   fieldAverage
   {
       type            fieldAverage;
       functionObjectLibs ( "libfieldFunctionObjects.so" );
       enabled         true;
       cleanRestart        true;
       outputControl   timeStep;
       outputControl   outputTime;
       fields
       (
           Te
           {
               mean        on;
               prime2Mean  off;
               base        time;
           }
           N_electron
           {
               mean        on;
               prime2Mean  off;
               base        time;
           }
           N_He
           {
               mean        on;
               prime2Mean  off;
               base        time;
           }
           /*N_He2m
           {
               mean        on;
               prime2Mean  off;
               base        time;
           }
           N_He2p1
           {
               mean        on;
               prime2Mean  off;
               base        time;
           }*/
           N_Hem
           {
               mean        on;
               prime2Mean  off;
               base        time;
           }
           N_Hep1
           {
               mean        on;
               prime2Mean  off;
               base        time;
           }
           Phi
           {
               mean        on;
               prime2Mean  off;
               base        time;
           }
       E
       {
        mean        on;
        prime2Mean  off;
        base        time;
       }
       );
   }

  /* probes
   {
        functionObjectLibs  ( "libsampling.so" );
        type    probes;
        name    probes;
        outputControl   timeStep;
        outputInterval  1;

        fields ( conductionCurrent N_electron N_He N_He2m N_He2p1 N_Hem N_Hep1 Phi Te);
        probeLocations
        (
            ( 0.00100000004 0.0002500000118743628 0.0002500000118743628)
            ( 0 0.0002500000118743628 0.0002500000118743628)
        );
   }*/
}

// ************************************************************************* //
